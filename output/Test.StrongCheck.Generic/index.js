// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
var Control_Bind = require("Control.Bind");
var Data_Array = require("Data.Array");
var Data_Int = require("Data.Int");
var Data_Foldable = require("Data.Foldable");
var Data_List = require("Data.List");
var Data_Monoid_Endo = require("Data.Monoid.Endo");
var Data_Generic = require("Data.Generic");
var Data_Maybe = require("Data.Maybe");
var Data_Maybe_Unsafe = require("Data.Maybe.Unsafe");
var Data_Tuple = require("Data.Tuple");
var Data_Traversable = require("Data.Traversable");
var Type_Proxy = require("Type.Proxy");
var Test_StrongCheck = require("Test.StrongCheck");
var Test_StrongCheck_Gen = require("Test.StrongCheck.Gen");
var Control_Monad_Free = require("Control.Monad.Free");
var GenericValue = function (x) {
    return x;
};
var runGenericValue = function (v) {
    return v;
};
var genericValue = function (sig) {
    return function (spine) {
        if (Data_Generic.isValidSpine(sig)(spine)) {
            return Data_Maybe.Just.create({
                signature: sig, 
                spine: spine
            });
        };
        if (Prelude.otherwise) {
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Test.StrongCheck.Generic line 66, column 1 - line 67, column 1: " + [ sig.constructor.name, spine.constructor.name ]);
    };
};
var genGenericSpine$prime = function (trail) {
    return function (v) {
        if (v instanceof Data_Generic.SigBoolean) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SBoolean.create)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbBoolean));
        };
        if (v instanceof Data_Generic.SigNumber) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SNumber.create)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber));
        };
        if (v instanceof Data_Generic.SigInt) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SInt.create)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbInt));
        };
        if (v instanceof Data_Generic.SigString) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SString.create)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbString));
        };
        if (v instanceof Data_Generic.SigChar) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SChar.create)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbChar));
        };
        if (v instanceof Data_Generic.SigArray) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SArray.create)(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Prelude["const"])(genGenericSpine$prime(trail)(v.value0(Prelude.unit)))));
        };
        if (v instanceof Data_Generic.SigProd) {
            var trailCount = function (sig) {
                return Data_Array.length(Data_Array.filter(Prelude["=="](Prelude.eqString)(sig.sigConstructor))(trail));
            };
            var probability = function (sig) {
                return 6.0 / (5.0 + Data_Int.toNumber(trailCount(sig)));
            };
            var ctors = Prelude["<#>"](Prelude.functorArray)(v.value1)(function (sig) {
                return new Data_Tuple.Tuple(probability(sig), sig);
            });
            var alt = function (altSig) {
                return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SProd.create(altSig.sigConstructor))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(function ($51) {
                    return Prelude.map(Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Prelude["const"])(genGenericSpine$prime(Data_Array[":"](altSig.sigConstructor)(trail))($51(Prelude.unit)));
                })(altSig.sigValues));
            };
            return Control_Bind["=<<"](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(alt)(Data_Maybe.maybe(Control_Plus.empty(Test_StrongCheck_Gen.plusGenT(Control_Monad_Free.freeMonad)))(function (cons) {
                return Test_StrongCheck_Gen.frequency(Control_Monad_Free.freeMonad)(cons.head)(Data_List.toList(Data_Foldable.foldableArray)(cons.tail));
            })(Data_Array.uncons(Prelude.map(Prelude.functorArray)(Prelude.map(Data_Tuple.functorTuple)(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))))(ctors))));
        };
        if (v instanceof Data_Generic.SigRecord) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Generic.SRecord.create)(Data_Traversable["for"](Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Traversable.traversableArray)(v.value0)(function (field) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(genGenericSpine$prime(trail)(field.recValue(Prelude.unit)))(function (v1) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))((function () {
                        var $30 = {};
                        for (var $31 in field) {
                            if (field.hasOwnProperty($31)) {
                                $30[$31] = field[$31];
                            };
                        };
                        $30.recValue = Prelude["const"](v1);
                        return $30;
                    })());
                });
            }));
        };
        throw new Error("Failed pattern match: " + [ trail.constructor.name, v.constructor.name ]);
    };
};
var genGenericSpine = genGenericSpine$prime(Control_Plus.empty(Control_Plus.plusArray));
var genGenericSignature = function (__copy_v) {
    var v = __copy_v;
    tco: while (true) {
        var size = v;
        if (size > 5) {
            v = 5;
            continue tco;
        };
        if (v === 0) {
            return Test_StrongCheck_Gen.elements(Control_Monad_Free.freeMonad)(Data_Generic.SigNumber.value)(Data_List.toList(Data_Foldable.foldableArray)([ Data_Generic.SigInt.value, Data_Generic.SigString.value, Data_Generic.SigBoolean.value ]));
        };
        var sigRecord = Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Array.nub(Prelude.eqString))(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbString))))(function (v1) {
            return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Prelude["const"])(Test_StrongCheck_Gen.sized(Control_Monad_Free.freeMonad)(genGenericSignature))))(function (v2) {
                return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Generic.SigRecord.create(Data_Array.zipWith(function (v3) {
                    return function (v4) {
                        return {
                            recLabel: v3, 
                            recValue: v4
                        };
                    };
                })(v1)(v2)));
            });
        });
        var sigProd = Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbString))(function (v1) {
            return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Array.nub(Prelude.eqString))(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbString))))(function (v2) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Test_StrongCheck_Gen.arrayOf(Control_Monad_Free.freeMonad)(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Prelude["const"])(Test_StrongCheck_Gen.sized(Control_Monad_Free.freeMonad)(genGenericSignature)))))(function (v3) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Generic.SigProd.create(v1)(Data_Array.zipWith(function (v4) {
                        return function (v5) {
                            return {
                                sigConstructor: v4, 
                                sigValues: v5
                            };
                        };
                    })(v2)(v3)));
                });
            });
        });
        var sigArray = Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(function ($52) {
            return Data_Generic.SigArray.create(Prelude["const"]($52));
        })(Test_StrongCheck_Gen.sized(Control_Monad_Free.freeMonad)(genGenericSignature));
        return Test_StrongCheck_Gen.resize(Control_Monad_Free.freeMonad)(v - 1)(Test_StrongCheck_Gen.oneOf(Control_Monad_Free.freeMonad)(sigArray)([ sigProd, sigRecord ]));
    };
};
var gArbitrary = function (dictGeneric) {
    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(function ($53) {
        return Data_Maybe_Unsafe.fromJust(Data_Generic.fromSpine(dictGeneric)($53));
    })(genGenericSpine(Data_Generic.toSignature(dictGeneric)(Type_Proxy.Proxy.value)));
};
var arbitraryGenericValue = new Test_StrongCheck.Arbitrary(Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.sized(Control_Monad_Free.freeMonad)(genGenericSignature))(function (v) {
    return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(genGenericSpine(v))(function (v1) {
        return Data_Maybe.maybe(Control_Plus.empty(Test_StrongCheck_Gen.plusGenT(Control_Monad_Free.freeMonad)))(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad)))(genericValue(v)(v1));
    });
}));
var applyAll = function (dictFoldable) {
    return function ($54) {
        return Data_Monoid_Endo.runEndo(Data_Foldable.foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo)(Data_Monoid_Endo.Endo)($54));
    };
};
var gCoarbitrary = function (dictGeneric) {
    var go = function (v) {
        if (v instanceof Data_Generic.SArray) {
            return applyAll(Data_Foldable.foldableArray)(Prelude.map(Prelude.functorArray)(function ($55) {
                return go((function (v1) {
                    return v1(Prelude.unit);
                })($55));
            })(v.value0));
        };
        if (v instanceof Data_Generic.SBoolean) {
            return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbBoolean)(v.value0);
        };
        if (v instanceof Data_Generic.SString) {
            return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbString)(v.value0);
        };
        if (v instanceof Data_Generic.SChar) {
            return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbChar)(v.value0);
        };
        if (v instanceof Data_Generic.SInt) {
            return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbInt)(v.value0);
        };
        if (v instanceof Data_Generic.SNumber) {
            return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbNumber)(v.value0);
        };
        if (v instanceof Data_Generic.SRecord) {
            return applyAll(Data_Foldable.foldableArray)(Prelude.map(Prelude.functorArray)(function (f) {
                return function ($56) {
                    return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbString)(f.recLabel)(go(f.recValue(Prelude.unit))($56));
                };
            })(v.value0));
        };
        if (v instanceof Data_Generic.SProd) {
            return function ($57) {
                return Test_StrongCheck.coarbitrary(Test_StrongCheck.coarbString)(v.value0)(applyAll(Data_Foldable.foldableArray)(Prelude.map(Prelude.functorArray)(function ($58) {
                    return go((function (v1) {
                        return v1(Prelude.unit);
                    })($58));
                })(v.value1))($57));
            };
        };
        throw new Error("Failed pattern match at Test.StrongCheck.Generic line 36, column 1 - line 37, column 1: " + [ v.constructor.name ]);
    };
    return function ($59) {
        return go(Data_Generic.toSpine(dictGeneric)($59));
    };
};
module.exports = {
    genGenericSpine: genGenericSpine, 
    genGenericSignature: genGenericSignature, 
    runGenericValue: runGenericValue, 
    genericValue: genericValue, 
    gCoarbitrary: gCoarbitrary, 
    gArbitrary: gArbitrary, 
    arbitraryGenericValue: arbitraryGenericValue
};
