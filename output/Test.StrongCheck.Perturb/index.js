// Generated by psc version 0.8.0.0
"use strict";
var Prelude = require("Prelude");
var Test_StrongCheck_Gen = require("Test.StrongCheck.Gen");
var Test_StrongCheck = require("Test.StrongCheck");
var Data_Traversable = require("Data.Traversable");
var Data_Foldable = require("Data.Foldable");
var Data_Tuple = require("Data.Tuple");
var Data_Monoid = require("Data.Monoid");
var Data_Either = require("Data.Either");
var Data_Maybe = require("Data.Maybe");
var Data_Enum = require("Data.Enum");
var Data_Int = require("Data.Int");
var Data_Functor_Invariant = require("Data.Functor.Invariant");
var Data_String = require("Data.String");
var Data_Array = require("Data.Array");
var Data_List = require("Data.List");
var $$Math = require("Math");
var Control_Monad_Free = require("Control.Monad.Free");
var Data_Unfoldable = require("Data.Unfoldable");
var Perturber = function (x) {
    return x;
};
var Attempts = function (x) {
    return x;
};
var Perturb = function (perturber) {
    this.perturber = perturber;
};
var $less$bslash$div$greater = function (v) {
    return function (v1) {
        var perturb__ALT = function (d) {
            return function (v2) {
                if (v2 instanceof Data_Either.Left) {
                    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Either.Left.create)(v.perturb(d)(v2.value0));
                };
                if (v2 instanceof Data_Either.Right) {
                    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Either.Right.create)(v1.perturb(d)(v2.value0));
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 136, column 9 - line 137, column 9: " + [ d.constructor.name, v2.constructor.name ]);
            };
        };
        var dist__ALT = function (v2) {
            return function (v3) {
                if (v2 instanceof Data_Either.Left && v3 instanceof Data_Either.Left) {
                    return v.dist(v2.value0)(v3.value0);
                };
                if (v2 instanceof Data_Either.Right && v3 instanceof Data_Either.Right) {
                    return v1.dist(v2.value0)(v3.value0);
                };
                return 1.0;
            };
        };
        var dims__ALT = function (v2) {
            if (v2 instanceof Data_Either.Left) {
                return v.dims(v2.value0);
            };
            if (v2 instanceof Data_Either.Right) {
                return v1.dims(v2.value0);
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 127, column 1 - line 128, column 1: " + [ v2.constructor.name ]);
        };
        return {
            perturb: perturb__ALT,
            dist: dist__ALT,
            dims: dims__ALT
        };
    };
};
var unPerturber = function (v) {
    return v;
};
var square = Prelude.flip($$Math.pow)(2.0);
var toDist = function (dictFoldable) {
    return function (dictFunctor) {
        return function (xs) {
            return $$Math.sqrt(Data_Foldable.sum(dictFoldable)(Prelude.semiringNumber)(Prelude["<$>"](dictFunctor)(square)(xs)));
        };
    };
};
var perturberInvariant = new Data_Functor_Invariant.Invariant(function (f) {
    return function (g) {
        return function (v) {
            return {
                perturb: function (n) {
                    return function (b) {
                        return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(f)(v.perturb(n)(g(b)));
                    };
                },
                dist: function (b1) {
                    return function (b2) {
                        return v.dist(g(b1))(g(b2));
                    };
                },
                dims: function (b) {
                    return v.dims(g(b));
                }
            };
        };
    };
});
var perturber = function (dict) {
    return dict.perturber;
};
var perturbChar = new Perturb((function () {
    var perturb__ALT = function (n) {
        return function (e) {
            var $63 = n < 1.0 / (2.0 * 65536.0);
            if ($63) {
                return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(e);
            };
            if (!$63) {
                return Test_StrongCheck.arbitrary(Test_StrongCheck.arbChar);
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 257, column 5 - line 259, column 1: " + [ $63.constructor.name ]);
        };
    };
    var dist__ALT = function (a) {
        return function (b) {
            var $64 = Prelude["=="](Prelude.eqChar)(a)(b);
            if ($64) {
                return 0.0;
            };
            if (!$64) {
                return 1.0 / (2.0 * 65536.0);
            };
            throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 249, column 1 - line 259, column 1: " + [ $64.constructor.name ]);
        };
    };
    var dims__ALT = Prelude["const"](1.0);
    return {
        perturb: perturb__ALT,
        dist: dist__ALT,
        dims: dims__ALT
    };
})());
var perturb = function (dictPerturb) {
    return (unPerturber(perturber(dictPerturb))).perturb;
};
var searchIn$prime = function (dictPerturb) {
    return function (v) {
        return function (n) {
            return function (f) {
                return function (a) {
                    var search0 = function (k1) {
                        return function (d) {
                            var $69 = k1 <= 0;
                            if ($69) {
                                return Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenT(Control_Monad_Free.freeMonad));
                            };
                            if (!$69) {
                                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Foldable.find(Data_Foldable.foldableArray)(f))(Test_StrongCheck_Gen.takeGen(Control_Monad_Free.freeMonad)(1)(Test_StrongCheck_Gen.chunked(Control_Monad_Free.freeMonad)(n)(perturb(dictPerturb)(d)(a)))))(function (v1) {
                                    return Prelude["<>"](Test_StrongCheck_Gen.semigroupGenT(Control_Monad_Free.freeMonad))(Data_Maybe.fromMaybe(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenT(Control_Monad_Free.freeMonad)))(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad)))(v1)))(search0(k1 - 1)(d / 2.0));
                                });
                            };
                            throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 92, column 1 - line 93, column 1: " + [ $69.constructor.name ]);
                        };
                    };
                    return search0(v)(1.0);
                };
            };
        };
    };
};
var searchIn = function (dictPerturb) {
    return searchIn$prime(dictPerturb)(1000)(10);
};
var nonPerturber = {
    perturb: Prelude["const"](Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))),
    dist: Prelude["const"](Prelude["const"](0)),
    dims: Prelude["const"](0)
};
var maxNumber = 9.007199254740992e15;
var k0 = $$Math.log(maxNumber + 1.0);
var perturbInt = new Perturb((function () {
    var perturb__ALT = function (v) {
        return function (n) {
            if (v === 0.0) {
                return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(n);
            };
            return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.freeMonad))(function (v1) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.runSignum)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbSignum)))(function (v2) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Maybe.fromMaybe(n)(Data_Int.fromNumber($$Math.round(Data_Int.toNumber(v2) * ($$Math.exp(k0 * (v1 * v)) - 1.0) + Data_Int.toNumber(n)))));
                });
            });
        };
    };
    var dist__ALT = function (a) {
        return function (b) {
            var from = function (y) {
                return $$Math.log(y + 1.0) / k0;
            };
            return $$Math.min(1.0)($$Math.abs(from($$Math.abs(Data_Int.toNumber(a) - Data_Int.toNumber(b)))));
        };
    };
    var dims__ALT = Prelude["const"](1.0);
    return {
        perturb: perturb__ALT,
        dist: dist__ALT,
        dims: dims__ALT
    };
})());
var perturbNumber = new Perturb((function () {
    var perturb__ALT = function (v) {
        return function (n) {
            if (v === 0.0) {
                return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(n);
            };
            return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.freeMonad))(function (v1) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.runSignum)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbSignum)))(function (v2) {
                    return Prelude["return"](Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_Int.toNumber(v2) * ($$Math.exp(k0 * (v1 * v)) - 1.0) + n);
                });
            });
        };
    };
    var dist__ALT = function (a) {
        return function (b) {
            var from = function (y) {
                return $$Math.log(y + 1.0) / k0;
            };
            return $$Math.min(1.0)($$Math.abs(from($$Math.abs(a - b))));
        };
    };
    var dims__ALT = Prelude["const"](1.0);
    return {
        perturb: perturb__ALT,
        dist: dist__ALT,
        dims: dims__ALT
    };
})());
var enumerated = function (dictEq) {
    return function (x) {
        return function (xs) {
            var len = 1 + Data_Array.length(xs) | 0;
            var dims__ALT = function (a) {
                var $79 = len > 0;
                if ($79) {
                    return 1.0;
                };
                if (!$79) {
                    return 0.0;
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 188, column 1 - line 189, column 1: " + [ $79.constructor.name ]);
            };
            var cutoff = 1.0 / (2.0 * Data_Int.toNumber(len));
            var dist__ALT = function (a1) {
                return function (a2) {
                    var $80 = Prelude["=="](dictEq)(a2)(a2);
                    if ($80) {
                        return 0.0;
                    };
                    if (!$80) {
                        return cutoff;
                    };
                    throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 188, column 1 - line 189, column 1: " + [ $80.constructor.name ]);
                };
            };
            var perturb__ALT = function (n) {
                return function (a) {
                    var $81 = n < cutoff;
                    if ($81) {
                        return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(a);
                    };
                    if (!$81) {
                        return Test_StrongCheck_Gen.elements(Control_Monad_Free.freeMonad)(x)(Data_List.toList(Data_Foldable.foldableArray)(xs));
                    };
                    throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 188, column 1 - line 189, column 1: " + [ $81.constructor.name ]);
                };
            };
            return {
                perturb: perturb__ALT,
                dist: dist__ALT,
                dims: dims__ALT
            };
        };
    };
};
var enumDims = function (dictEnum) {
    return function (f) {
        return f(Data_Enum.cardinality(dictEnum));
    };
};
var dist = function (dictPerturb) {
    return (unPerturber(perturber(dictPerturb))).dist;
};
var dims = function (dictPerturb) {
    return (unPerturber(perturber(dictPerturb))).dims;
};
var delta = function (n) {
    return function (d) {
        return $$Math.sqrt((d * d) / n);
    };
};
var perturbList = function (dictPerturb) {
    return new Perturb((function () {
        var perturb__ALT = function (v) {
            return function (v1) {
                if (v1 instanceof Data_List.Nil) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Data_List.Nil.value);
                };
                if (v === 0.0) {
                    return Data_Traversable.sequence(Data_List.traversableList)(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Data_List.functorList)(perturb(dictPerturb)(0.0))(v1));
                };
                var dx = delta(Data_Int.toNumber(Data_List.length(v1)))(v);
                return Data_Traversable.sequence(Data_List.traversableList)(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Data_List.functorList)(perturb(dictPerturb)(dx))(v1));
            };
        };
        var dist__ALT = function (a) {
            return function (b) {
                return toDist(Data_List.foldableList)(Data_List.functorList)(Data_List.zipWith(dist(dictPerturb))(a)(b));
            };
        };
        var dims__ALT = function ($112) {
            return Data_Int.toNumber(Data_List.length($112));
        };
        return {
            perturb: perturb__ALT,
            dist: dist__ALT,
            dims: dims__ALT
        };
    })());
};
var perturbString = new Perturb((function () {
    var perturb__ALT = function (d) {
        return function (s) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(function ($113) {
                return Data_String.fromCharArray(Data_List.fromList(Data_Unfoldable.unfoldableArray)($113));
            })(perturb(perturbList(perturbChar))(d)(Data_List.toList(Data_Foldable.foldableArray)(Data_String.toCharArray(s))));
        };
    };
    var dist__ALT = function (s1) {
        return function (s2) {
            return dist(perturbList(perturbChar))(Data_List.toList(Data_Foldable.foldableArray)(Data_String.toCharArray(s1)))(Data_List.toList(Data_Foldable.foldableArray)(Data_String.toCharArray(s2)));
        };
    };
    var dims__ALT = function ($114) {
        return dims(perturbList(perturbChar))(Data_List.toList(Data_Foldable.foldableArray)(Data_String.toCharArray($114)));
    };
    return {
        perturb: perturb__ALT,
        dist: dist__ALT,
        dims: dims__ALT
    };
})());
var $less$div$bslash$greater = function (v) {
    return function (v1) {
        var perturb__ALT = function (d) {
            return function (v2) {
                var dx = delta(v.dims(v2.value0) + v1.dims(v2.value1))(d);
                var dx2 = dx * dx;
                var ld = $$Math.sqrt(dx2 * v.dims(v2.value0));
                var rd = $$Math.sqrt(dx2 * v1.dims(v2.value1));
                return Prelude["<*>"](Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.freeMonad))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Data_Tuple.Tuple.create)(v.perturb(ld)(v2.value0)))(v1.perturb(rd)(v2.value1));
            };
        };
        var dist__ALT = function (v2) {
            return function (v3) {
                return toDist(Data_Foldable.foldableArray)(Prelude.functorArray)([ v.dist(v2.value0)(v3.value0), v1.dist(v2.value1)(v3.value1) ]);
            };
        };
        var dims__ALT = function (v2) {
            return v.dims(v2.value0) + v1.dims(v2.value1);
        };
        return {
            perturb: perturb__ALT,
            dist: dist__ALT,
            dims: dims__ALT
        };
    };
};
var cardPerturb1F = function (dictEnum) {
    return function (a) {
        return function (n) {
            return function (v) {
                var $102 = n < 1.0 / (2.0 * Data_Int.toNumber(v));
                if ($102) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(a);
                };
                if (!$102) {
                    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.runArbEnum)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbArbEnum(dictEnum)));
                };
                throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 307, column 1 - line 308, column 1: " + [ $102.constructor.name ]);
            };
        };
    };
};
var cardPerturb1 = function (dictEnum) {
    return function (f) {
        return f(Data_Enum.cardinality(dictEnum));
    };
};
var cardDist1 = function (dictEnum) {
    return function (f) {
        return f(Data_Enum.cardinality(dictEnum));
    };
};
var perturbArbEnum = function (dictEnum) {
    return function (dictEq) {
        return new Perturb((function () {
            var perturb__ALT = function (n) {
                return function (e) {
                    return cardPerturb1(Test_StrongCheck.enumArbEnum(dictEnum))(cardPerturb1F(Test_StrongCheck.enumArbEnum(dictEnum))(e)(n));
                };
            };
            var dist__ALT = function (a) {
                return function (b) {
                    var f = function (v) {
                        return function (a1) {
                            return function (b1) {
                                var $106 = Prelude["=="](dictEq)(Test_StrongCheck.runArbEnum(a1))(Test_StrongCheck.runArbEnum(b1));
                                if ($106) {
                                    return 0.0;
                                };
                                if (!$106) {
                                    return 1.0 / (2.0 * Data_Int.toNumber(v));
                                };
                                throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 202, column 13 - line 204, column 11: " + [ $106.constructor.name ]);
                            };
                        };
                    };
                    return cardDist1(Test_StrongCheck.enumArbEnum(dictEnum))(f)(a)(b);
                };
            };
            var dims__ALT = function (e) {
                var f = function (v) {
                    return function (e1) {
                        var $109 = v <= 0;
                        if ($109) {
                            return 0.0;
                        };
                        if (!$109) {
                            return 1.0;
                        };
                        throw new Error("Failed pattern match at Test.StrongCheck.Perturb line 205, column 13 - line 207, column 1: " + [ $109.constructor.name ]);
                    };
                };
                return enumDims(Test_StrongCheck.enumArbEnum(dictEnum))(f)(e);
            };
            return {
                perturb: perturb__ALT,
                dist: dist__ALT,
                dims: dims__ALT
            };
        })());
    };
};
var perturbBoolean = new Perturb((function () {
    var perturb__ALT = function (n) {
        return function (e) {
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.runArbEnum)(perturb(perturbArbEnum(Data_Enum.enumBoolean)(Prelude.eqBoolean))(n)(e));
        };
    };
    var dist__ALT = function (a) {
        return function (b) {
            return dist(perturbArbEnum(Data_Enum.enumBoolean)(Prelude.eqBoolean))(a)(b);
        };
    };
    var dims__ALT = Prelude["const"](1.0);
    return {
        perturb: perturb__ALT,
        dist: dist__ALT,
        dims: dims__ALT
    };
})());
var boundedInt = function (aInt) {
    return function (bInt) {
        var dist__ALT = function (x) {
            return function (y) {
                return $$Math.abs(Data_Int.toNumber(x - y));
            };
        };
        var dims__ALT = Prelude["const"](1.0);
        var b = Data_Int.toNumber(bInt);
        var a = Data_Int.toNumber(aInt);
        var l = $$Math.floor($$Math.min(a)(b));
        var u = $$Math.ceil($$Math.max(a)(b));
        var clamp = function (n) {
            return $$Math.max(l)($$Math.min(u)(n));
        };
        var length = u - l;
        var perturb__ALT = function (d) {
            return function (v) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(function (v1) {
                    var n = $$Math.round(clamp(Data_Int.toNumber(v) + d * length * v1));
                    var i = Data_Maybe.fromMaybe(aInt + 1 | 0)(Data_Int.fromNumber(n));
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(i);
                });
            };
        };
        return {
            perturb: perturb__ALT,
            dist: dist__ALT,
            dims: dims__ALT
        };
    };
};
var bounded = function (a) {
    return function (b) {
        var u = $$Math.max(a)(b);
        var l = $$Math.min(a)(b);
        var length = u - l;
        var dist__ALT = function (a1) {
            return function (b1) {
                return $$Math.abs(a1 - b1);
            };
        };
        var dims__ALT = Prelude["const"](1.0);
        var clamp = function (n) {
            return $$Math.max(l)($$Math.min(u)(n));
        };
        var perturb__ALT = function (d) {
            return function (v) {
                return Prelude.bind(Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.freeMonad))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(function (v1) {
                    return Prelude["return"](Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.freeMonad))(clamp(v1 * length * d + v));
                });
            };
        };
        return {
            perturb: perturb__ALT,
            dist: dist__ALT,
            dims: dims__ALT
        };
    };
};
module.exports = {
    Perturber: Perturber,
    Attempts: Attempts,
    Perturb: Perturb,
    unPerturber: unPerturber,
    searchIn: searchIn,
    "searchIn'": searchIn$prime,
    perturber: perturber,
    perturb: perturb,
    nonPerturber: nonPerturber,
    enumerated: enumerated,
    dims: dims,
    dist: dist,
    boundedInt: boundedInt,
    bounded: bounded,
    "<\\/>": $less$bslash$div$greater,
    "</\\>": $less$div$bslash$greater,
    perturberInvariant: perturberInvariant,
    perturbArbEnum: perturbArbEnum,
    perturbNumber: perturbNumber,
    perturbInt: perturbInt,
    perturbList: perturbList,
    perturbChar: perturbChar,
    perturbBoolean: perturbBoolean,
    perturbString: perturbString
};
