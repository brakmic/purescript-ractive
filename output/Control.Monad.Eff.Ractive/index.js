// Generated by psc version 0.8.0.0
"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Maybe = require("Data.Maybe");
var Data_Foreign_EasyFFI = require("Data.Foreign.EasyFFI");
var RQString = (function () {
    function RQString(value0) {
        this.value0 = value0;
    };
    RQString.create = function (value0) {
        return new RQString(value0);
    };
    return RQString;
})();
var RQNode = (function () {
    function RQNode(value0) {
        this.value0 = value0;
    };
    RQNode.create = function (value0) {
        return new RQNode(value0);
    };
    return RQNode;
})();
var ffiP = Data_Foreign_EasyFFI.unsafeForeignProcedure;
var renderById = ffiP([ "id", "ractive" ])("ractive.render(id);");
var setPartial = ffiP([ "selector", "value", "ractive" ])("ractive.partials[selector] = value;");
var updateModel = ffiP([ "ractive" ])("ractive.updateModel();");
var ffiF = Data_Foreign_EasyFFI.unsafeForeignFunction;
var getPartial = ffiF([ "selector", "ractive" ])("ractive.partials[selector];");
var ractiveFromData = ffiF([ "data", "" ])("new Ractive(data);");
module.exports = {
    RQString: RQString, 
    RQNode: RQNode, 
    renderById: renderById, 
    updateModel: updateModel, 
    getPartial: getPartial, 
    setPartial: setPartial, 
    ractiveFromData: ractiveFromData, 
    ffiP: ffiP, 
    ffiF: ffiF, 
    findAll: $foreign.findAll, 
    find: $foreign.find, 
    observeOnce: $foreign.observeOnce, 
    observe: $foreign.observe, 
    pop: $foreign.pop, 
    push: $foreign.push, 
    set: $foreign.set, 
    get: $foreign.get, 
    off: $foreign.off, 
    on: $foreign.on, 
    ractive: $foreign.ractive
};
